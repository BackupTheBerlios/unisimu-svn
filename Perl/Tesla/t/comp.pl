# This file was generated by tslc at Wed Mar 22 17:26:15 2006

use strict;
use warnings;
use Tesla;

#line 7 "t/comp.tsl"
$NOR::delay = 1.5;

#line 9 "t/comp.tsl"
my $A = Signal->new("A");

#line 9 "t/comp.tsl"
my $B = Signal->new("B");

#line 9 "t/comp.tsl"
my $C = Signal->new("C");

#line 9 "t/comp.tsl"
my $D = Signal->new("D");

#line 9 "t/comp.tsl"
my $S = Signal->new("S");

#line 11 "t/comp.tsl"
sub SRLatch {
    if (@_ != 4) {
        my ($package, $filename, $line) = caller;
        die "$filename($line): error: ".
            "Component SRLatch expects 4 arguments.\n";
    }
    my ($S,$R,$Q,$Qp) = @_;

#line 12 "t/comp.tsl"
my $C = Signal->new("SRLatch::C");

#line 13 "t/comp.tsl"
my $gate1 = NOR->new();
$gate1->output($Qp);
$gate1->inputs($S,$Q);

#line 13 "t/comp.tsl"
$S->add_dest($gate1);

#line 13 "t/comp.tsl"
$Q->add_dest($gate1);

#line 14 "t/comp.tsl"
my $gate2 = NOR->new();
$gate2->output($Q);
$gate2->inputs($R,$Qp);

#line 14 "t/comp.tsl"
$R->add_dest($gate2);

#line 14 "t/comp.tsl"
$Qp->add_dest($gate2);

#line 15 "t/comp.tsl"
}

#line 17 "t/comp.tsl"
SRLatch($A,$B,$C,$D);

#line 19 "t/comp.tsl"
EventConsole->add_events( [0], $D, ['1'] );

#line 20 "t/comp.tsl"
EventConsole->add_events( [0,10,20], $A, ['0','1','0'] );

#line 21 "t/comp.tsl"
EventConsole->add_events( [0,30], $B, ['0','1'] );

#line 23 "t/comp.tsl"
Tesla->run(50);

#line 25 "t/comp.tsl"
print $C->name, " : ", $C->histp, "\n";

#line 25 "t/comp.tsl"
print $D->name, " : ", $D->histp, "\n";

#line 25 "t/comp.tsl"
print "
";

#line 27 "t/comp.tsl"
Tesla->reset;

#line 29 "t/comp.tsl"
EventConsole->add_events( [0], $D, ['1'] );

#line 30 "t/comp.tsl"
EventConsole->add_events( [0,80,84,88,92,96], $A, ['0','1','0','1','0','1'] );

#line 31 "t/comp.tsl"
EventConsole->add_events( [0,35,39,43,47,51], $B, ['1','0','1','0','1','0'] );

#line 33 "t/comp.tsl"
Tesla->run(150);

#line 34 "t/comp.tsl"
print $C->name, " : ", $C->histp, "\n";

#line 34 "t/comp.tsl"
print $D->name, " : ", $D->histp, "\n";

#line 34 "t/comp.tsl"
print "
";

#line 36 "t/comp.tsl"
Tesla->reset;

#line 38 "t/comp.tsl"
my $E = Signal->new("E");

#line 38 "t/comp.tsl"
my $F = Signal->new("F");

#line 38 "t/comp.tsl"
my $G = Signal->new("G");

#line 38 "t/comp.tsl"
my $H = Signal->new("H");

#line 40 "t/comp.tsl"
sub SRLatch2 {
    if (@_ != 4) {
        my ($package, $filename, $line) = caller;
        die "$filename($line): error: ".
            "Component SRLatch2 expects 4 arguments.\n";
    }
    my ($S,$R,$Q,$Qp) = @_;

#line 41 "t/comp.tsl"
my $C = Signal->new("SRLatch2::C");

#line 42 "t/comp.tsl"
my $gate3 = NOR->new();
$gate3->output($Qp);
$gate3->inputs($S,$Q);

#line 42 "t/comp.tsl"
$S->add_dest($gate3);

#line 42 "t/comp.tsl"
$Q->add_dest($gate3);

#line 43 "t/comp.tsl"
my $gate4 = NOR->new();
$gate4->output($Q);
$gate4->inputs($R,$Qp);

#line 43 "t/comp.tsl"
$R->add_dest($gate4);

#line 43 "t/comp.tsl"
$Qp->add_dest($gate4);

#line 44 "t/comp.tsl"
}

#line 46 "t/comp.tsl"
SRLatch2($E,$F,$G,$H);

#line 48 "t/comp.tsl"
EventConsole->add_events( [0,10,20], $E, ['0','1','0'] );

#line 49 "t/comp.tsl"
EventConsole->add_events( [0,30], $F, ['0','1'] );

#line 50 "t/comp.tsl"
EventConsole->add_events( [0], $H, ['1'] );

#line 52 "t/comp.tsl"
Tesla->run(50);

#line 54 "t/comp.tsl"
print $G->name, " : ", $G->histp, "\n";

#line 54 "t/comp.tsl"
print $H->name, " : ", $H->histp, "\n";

#line 54 "t/comp.tsl"
print "
";

0;
