<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="css/agentzh.css" type="text/css"?>

<page xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul" id="sporx" xmlns:html="http:/www.w3.org/1999/xhtml" orient="vertical" onkeypress="Sporx.onKeyPress(event);">

<html:textarea id="builtinCode" style="visibility: collapse">----
{{#t|The Art of Naming}}
----
The Art of {{#x|Naming}}
{{#x|命名}}的艺术
☺{{#ci|Agent Zhang}}☺
{{#date|2006.9}}
----
Why naming {{#ci|matters}}?
  
为什么命名很{{#ci|重要}}？
----
{{#ci|Good}} hackers
➥ {{#x|poets}} and {{#x|wordsmiths}}
  
好的黑客
➥ 诗人和词汇大师
----
A {{#ci|poetry}} in Pugs' {{#x|Main.hs}}  {{#tag|⇒}}
 
  
Pugs 的 Main.hs 中的英文诗歌  {{#tag|⇒}}
----
    A {{#ci|ship}} then new they built for {{#ci|him}}
    Of {{#x|mithril}} and of {{#x|elven-glass}}
    With shining prow; no shaven oar
    Nor sail {{#ci|she}} bore on silver mast;
    The Silmaril as {{#x|lantern light}}
    And banner bright with {{#x|living flame}}
    To gleam thereon by Elbereth
    {{#ci|Herself}} was set, who thither came...
----
XXX 中文译文
----
Perl 6 {{#ci|translation}} ⇒
  
{{#ci|翻译}}到 Perl 6 编程语言 ⇒
----
    {{#kw|use}} v6;
    {{#kw|for}} {{#v|$*Larry}} {
        {{#kw|our}} Ship {{#v|$pugs}} .= {{#kw|new}}(:of{{#x|&lt;mithril elven-glass>}});
        {{#kw|given}} {{#v|$pugs}} {
            {{#v|$.prow}} {{#kw|does}} Shine;
            Silver {{#v|$.mast}} {{#kw|but}} none(Oar::Shaven, Sail);
            Light  {{#v|$.lantern}} := {{#v|$*Silmaril}};
            Bright {{#v|$.banner}}  := Flame.bless:{};
            {{#kw|when}} {{#v|$*Elbereth}}.gleam {
                .sail(...);
            }
        }
    }
----
{{#ci|Top}} Programmers take {{#x|naming}} issues
very seriously
  
顶级的黑客对命名问题
非常认真。
----
as seen on the {{#ci|#perl6}} channel
of {{#x|irc.freenode.net}}...
  
  
正如在 irc.freenode.net 上的 #perl6 通道里
所看见的那样……
----
 {{#v|&lt;agentzh>}}  TimToady++  # JIT syn fixes
 {{#v|&lt;TimToady>}} thanks
 {{#v|&lt;TimToady>}} I looked at {{#ci|several hundred}} words
              before picking START.
   
    
 {{#v|&lt;章亦春>}}     (Larry Wall)++  # 即时 Perl 6 文档修改
 {{#v|&lt;Larry Wall>}} 谢谢
 {{#v|&lt;Larry Wall>}} 我在挑选出 START 这个名字之前查看了
               {{#ci|几百个}}单词。
----
{{img src="#" width="0" height="0"}}
{{img src="images/larry.jpg" width="240" height="392"}}
----
 {{#v|&lt;gaal>}} defer? slothlike
 {{#v|&lt;audreyt>}} I like \"defer\"
 {{#v|&lt;audreyt>}} gaal++
 * audreyt deletes Data::Thunk and uploads Data::Defer
 {{#v|&lt;audreyt>}} ...and it's now Scalar::Defer
 {{#v|&lt;audreyt>}} {{#ci|naming}} takes {{#ci|more}} time than tests+doc+code
   
  
 {{#v|&lt;gaal>}} defer 怎么样? 有些惰性的味道
 {{#v|&lt;唐凤>}} 我喜欢“defer”
 {{#v|&lt;唐凤>}} gaal++
 * 唐凤删除了 Data::Thunk 并上传了 Data::Defer
 {{#v|&lt;唐凤>}} ……现在它叫做 Scalar::Defer 了
 {{#v|&lt;唐凤>}} {{#ci|命名}}所花费的时间比测试 + 文档 + 实现代码{{#ci|还要多}}
----
{{img src="images/audrey.jpg" width="480" height="403"}}
----
{{#tag|☆}} Follow the {{#x|naming convention}}
of the language {{#ci|you}} are using.
  
遵循你所使用的语言
的命名约定。
----
 {{#v|// C++ STL naming style}}
 {{#x|vector}}&lt;{{#x|string}}> list;
 list.{{#ci|push_back}}(\"hello\");
 while (!list.{{#ci|empty}}()) {...}
----
 {{#v|// Java naming style}}
 {{#x|List}} list = new {{#x|ArrayList}}();
 list.{{#ci|add}}(\"hello\");
 while (!list.{{#ci|isEmpty}}()) {...}
----
 {{#v|// C# naming style}}
 {{#x|ArrayList}} myAL = new {{#x|ArrayList}}();
 myAL.{{#ci|Add}}(\"hello\");
 Console.{{#ci|WriteLine}}(myAL.{{#ci|ToString}}());
----
{{#tag|☆}} Use {{#ci|meaningful}} names
  
使用{{#ci|有意义}}的名字
----
 {{#ci|?}}  Button {{#x|button1}} = new Button(\"New\");
 {{#ci|?}}  Button {{#x|button2}} = new Button(\"Open\");
 {{#ci|?}}  Button {{#x|button3}} = new Button(\"Save\");
   
+{{#x|☹}} This is {{#ci|bad}}.
----
 {{#ci|?}}  Button {{#x|button_New}}  = new Button(\"New\");
 {{#ci|?}}  Button {{#x|button_Open}} = new Button(\"Open\");
 {{#ci|?}}  Button {{#x|button_Save}} = new Button(\"Save\");
   
+{{#x|☹}} This is {{#ci|ugly}}.
----
   Button {{#x|btnNew}}  = new Button(\"New\");
   Button {{#x|btnOpen}} = new Button(\"Open\");
   Button {{#x|btnSave}} = new Button(\"Save\");
   
+{{#x|☺}} This is {{#ci|good}}.
----
The {{#x|Ugly}}, the {{#x|Bad}}, and the {{#x|Good}}
  
丑的，坏的，好的
----
{{#tag|☆}} Choose {{#ci|nouns}} for
your {{#x|class}} names
  
从名词中为你的类取名
----
{{img src="images/noun.gif" width="288" height="266"}}
----
 class {{#x|Evaluator}} { ... }
 class {{#x|Solver}} { ... }
 class {{#x|Withdrawal}} { ... }
   
+{{#x|☺}} These are {{#ci|good}}.
----
 {{#ci|?}}  class {{#x|Evaluate}} { ... }
 {{#ci|?}}  class {{#x|Solve}} { ... }
 {{#ci|?}}  class {{#x|Withdraw}} { ... }
   
+{{#x|☹}} These are {{#ci|bad}}.
----
 {{#v|# The following class/module names are also good:}}
 {{#kw|package}} CGI::Simple;
 {{#kw|package}} XML::Smart;
 {{#kw|package}} Class::DBI::Sweet;
 {{#kw|package}} Test::Easy;
----
{{#tag|☆}} Choose active {{#ci|verbs}} for
your {{#x|method}} names
  
从主动动词中为你的方法取名
----
{{img src="images/verb.gif" width="437" height="224"}}
----
 $dbh = DBI.{{#x|connect}}('dbi:odbc:qqbase');
 $dbh.{{#x|commit}}();
 $account.{{#x|update}}(balance => 100);
   
+{{#x|☺}} These are {{#ci|good}}.
----
 {{#ci|?}}  $dbh = DBI.{{#x|connection}}('dbi:odbc:qqbase');
 {{#ci|?}}  $dbh.{{#x|committing}}();
 {{#ci|?}}  $account.{{#x|updated}}(balance => 100);
   
+{{#x|☹}} These are {{#ci|bad}}.
----
{{#tag|☆}} Choose {{#ci|nouns}} or {{#ci|adjectives}} for
your {{#x|property}} names
  
从名词或者形容词中为你的属性取名
----
  @list.{{#x|length}}
  $persion.{{#x|name}}
  {{#kw|if}} $dbh.{{#x|available}} { ... }
  {{#die kw|if}} $set.{{#x|is_empty}};
  
+{{#x|☺}} These are {{#ci|good}}.
----
{{#tag|☆}} Use {{#x|namespaces}} to split your
{{#ci|verbose}} class names.
  
使用命名空间来分割你冗长的类名。
----
 {{#ci|?}}  class {{#x|Makefile_Parser_AST_Element}} {
 {{#ci|?}}      ...
 {{#ci|?}}  }
 {{#ci|?}}  {{#x|Makefile_Parser_AST_Element}} elem();
  
+{{#x|☹}} This is {{#ci|ugly}}.
----
  namespace {{#x|Makefile::Parser::AST}} {
      class {{#x|Element}} { ... }
  }
  {{#x|Makefile::Parser::AST::Element}} elem();
   
+{{#x|☺}} This is {{#ci|good}}.
----
{{#tag|☆}} Use {{#x|short}} names for {{#ci|common}} things.
  
为常用的东西取短名字。
----
 {{#ci|Common}} operations should be \"{{#x|Huffman coded}}\".
 That is, frequently used operators should be
 {{#ci|shorter}} than infrequently used ones.
          -- {{#t|Larry Wall}} (Perl 6 Apocalypse 3)
  
 对常见的操作应该进行“哈夫曼编码”。也就是说，频繁
 使用的运算符的名称应该比那些不经常使用的要短。
         -- {{#t|Larry Wall}} (Perl 6 启示录 3)
----
{{img src="images/huffman.gif" width="510" height="470"}}
----
 {{#v|// The Java way:}}
 {{#ci|System.out.println}}(\"Computing the sum...\");
 {{#kw|for}} ({{#kw|int}} i = 1; i &lt;= n; i++) {
     sum += i;
     {{#ci|System.out.println}}(i);
 }
 {{#ci|System.out.println}}(\"Sum: \" + sum);
   
+{{#x|☹}} This is {{#ci|ugly}}.
----
     {{#v|# The Perl 6 way:}}
     {{#ci|say}} \"Computing the sum...\";
     {{#kw|for}} 1..$n -> $i {
         $sum += $i;
         {{#ci|say}} $i;
     }
     {{#ci|say}} \"Sum: $sum\";
   
+{{#x|☺}} This is {{#ci|good}}.
----
{{#tag|☆}} Use {{#x|short}} names for {{#ci|locals}}.
   
为局部变量取短名字。
----
 {{#kw|int}} {{#ci|len}} = list.length;
 {{#kw|for}} ({{#kw|int}} {{#ci|i}} = 0; {{#ci|i}} &lt; {{#ci|len}}; {{#ci|i}}++)
     System.out.println(list[{{#ci|i}}]);
   
+{{#x|☺}} This is {{#ci|good}}.
----
 {{#kw|int}} {{#ci|length}} = list.length;
 {{#kw|for}} ({{#kw|int}} {{#ci|index}} = 0; {{#ci|index}} &lt; {{#ci|length}}; {{#ci|index}}++)
     System.out.println(list[{{#ci|index}}]);
   
+{{#x|☺}} This is {{#ci|ugly}}.
----
{{#tag|☆}} Don't {{#ci|repeat}} yourself.
(The {{#x|DRY}} principle)
   
不要重复你自己
（DRY 原则）
----
 {{#v|// The Java way:}}
 {{#ci|double}} value = {{#ci|Double}}.parse{{#ci|Double}}(\"3.14\");
   
+{{#x|☹}} This is {{#ci|ugly}}.
----
 {{#v|// The C# way:}}
 {{#ci|double}} value = {{#ci|double}}.Parse(\"3.14\");
  
+{{#x|☹}} Just a bit better.
----
     {{#v|// The Perl 6 way:}}
     {{#kw|my}} {{#ci|Double}} $value = \"3.14\";
   
+{{#x|☺}} This is {{#ci|good}}!
----
     {{#v|// The C/C++ way:}}
     {{#ci|double}} value = atof(\"3.14\");
   
+{{#x|☺}} This is {{#ci|good}} too,
though a bit fuzzy.
----
{{#tag|☆}} Tell me {{#ci|more}}!
(Don't be {{#x|handwaving}}.)
  
多告诉我一些！
（不要遮遮掩掩。）
----
 {{#ci|?}}  {{#kw|if}} ({{#x|check_even}}(num)) { ... }
  
+Check if it {{#ci|is}} an even number?
+Check if it {{#ci|is not}} an even number?
----
{{#tag|☆}} Improper {{#x|abbreviations}} can be
{{#ci|very confusing}}.
  
不恰当的缩写名可能会让人
非常迷糊。
----
 {{#v|&lt;Sal>}}      what is \"{{#x|JQL}}\"?
 {{#v|&lt;clkao>}}    {{#x|J}}abberwocky {{#x|Q}}uery {{#x|L}}anguage?
 {{#v|&lt;TimToady>}} {{#x|J}}ust {{#x|Q}}uack {{#x|L}}oudly?
 {{#v|&lt;audreyt>}}  {{#x|J}}unctional {{#x|Q}}uantum {{#x|L}}ibrary?
  
  
 {{#v|&lt;仲伟祥>}}      什么是“{{#x|JQL}}”？
 {{#v|&lt;高嘉良>}}      废话查询语言？
 {{#v|&lt;Larry Wall>}} 不过是高声吹嘘？
 {{#v|&lt;唐凤>}}        联结性量子库？
----




----
Get the {{#x|slides}} today!
{{#c|♨}}
    
{{http://perlcabal.org/agent/slides/naming/naming.xul}}
----
These slides are
{{#ci|powered}} by
+{{#x|Sporx}} and...
----
 {{img src="images/grin.png" width="65" height="65"}}
{{#ci|Takahashi}}{{#x|++}}
----
{{#c|Thank you!}}
☺
</html:textarea>

<deck flex="1" id="deck">
 <vbox flex="1" onmousemove="Sporx.onMouseMoveOnCanvas(event);">
  <toolbox id="canvasToolbar">
   <toolbar>
    <toolbarbutton oncommand="Sporx.home()" label="|&lt;&lt;" observes="canBack"/>
    <toolbarbutton oncommand="Sporx.back()" label="&lt;" observes="canBack"/>
    <toolbarbutton oncommand="Sporx.forward()" label="&gt;" observes="canForward"/>
    <toolbarbutton oncommand="Sporx.end()" label="&gt;&gt;|" observes="canForward"/>
    <toolbarseparator/>
    <hbox align="center">
     <textbox id="current_page" size="4" oninput="if (this.value) Sporx.showPage(parseInt(this.value)-1);"/>
     <description value="/"/>
     <description id="max_page"/>
    </hbox>
    <toolbarseparator/>
    <vbox flex="2">
     <spacer flex="1"/>
     <scrollbar id="scroller" align="center" orient="horizontal" oncommand="Sporx.showPage(parseInt(event.target.getAttribute('curpos')));" onclick="Sporx.showPage(parseInt(event.target.getAttribute('curpos')));" onmousedown="Sporx.onScrollerDragStart();" onmousemove="Sporx.onScrollerDragMove();" onmouseup="Sporx.onScrollerDragDrop();"/>
     <spacer flex="1"/>
    </vbox>
    <toolbarseparator/>
    <spacer flex="1"/>
    <toolbarseparator/>
    <toolbarbutton id="toggleEva" label="Eva" type="checkbox" autoCheck="false" oncommand="Sporx.toggleEvaMode();"/>
    <toolbarseparator/>
    <toolbarbutton label="Edit" oncommand="Sporx.toggleEditMode();"/>
    <toolbarbutton oncommand="Sporx.reload();" label="Reload"/>
   </toolbar>
  </toolbox>
  <vbox flex="1" id="canvas" onclick="Sporx.onPresentationClick(event);">
   <spacer flex="1"/>
   <hbox flex="1">
    <spacer flex="1"/>
    <vbox id="content"/>
    <spacer flex="1"/>
   </hbox>
   <spacer flex="1"/>
  </vbox>
 </vbox>
 <vbox flex="1" id="edit">
  <toolbox>
   <toolbar>
    <toolbarbutton label="New Page" oncommand="Sporx.addPage()"/>
    <spacer flex="1"/>
    <toolbarseparator/>
    <toolbarbutton label="View" oncommand="Sporx.toggleEditMode();"/>
    <toolbarbutton oncommand="Sporx.reload();" label="Reload"/>
   </toolbar>
  </toolbox>
  <textbox id="textField" flex="1" multiline="true" oninput="Sporx.onEdit()"/>
  <hbox collapsed="true">
   <iframe id="dataLoader" onload="if (window.Sporx) Sporx.onDataLoad();"/>
  </hbox>
 </vbox>
</deck>

<broadcasterset>
 <broadcaster id="canBack"/>
 <broadcaster id="canForward"/>
</broadcasterset>

<commandset>
 <command id="cmd_forward" oncommand="if (Sporx.isPresentationMode) Sporx.forward();"/>
 <command id="cmd_back" oncommand="if (Sporx.isPresentationMode) Sporx.back();"/>
 <command id="cmd_home" oncommand="if (Sporx.isPresentationMode) Sporx.home();"/>
 <command id="cmd_end" oncommand="if (Sporx.isPresentationMode) Sporx.end();"/>
</commandset>

<keyset>
 <key key=" "                   command="cmd_forward"/>
 <key keycode="VK_ENTER"        command="cmd_forward"/>
 <key keycode="VK_RETURN"       command="cmd_forward"/>
 <key keycode="VK_PAGE_DOWN"    command="cmd_forward"/>
 <key keycode="VK_RIGHT"        command="cmd_forward"/>
 <key keycode="VK_DOWN"         command="cmd_forward"/>
 <!--key keycode="VK_BACK_SPACE"   command="cmd_back"/-->
 <key keycode="VK_UP"           command="cmd_back"/>
 <key keycode="VK_PAGE_UP"      command="cmd_back"/>
 <!--<key keycode="VK_BACK_UP"    command="cmd_back"/>-->
 <!--<key keycode="VK_BACK_LEFT"  command="cmd_back"/>-->
 <key keycode="VK_HOME"         command="cmd_home"/>
 <!--<key keycode="VK_END"        command="cmd_end"/>-->

 <key key="n" modifiers="accel" oncommand="Sporx.addPage();"/>
 <key key="r" modifiers="accel" oncommand="window.location.reload();"/>
 <key key="e" modifiers="accel" oncommand="Sporx.toggleEditMode();"/>
 <key key="a" modifiers="accel" oncommand="Sporx.toggleEvaMode();"/>
</keyset>


<script src="lib/sporx.js" type="application/x-javascript" />

</page>

<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is the Takahashi-Method-based Presentation Tool in XUL.
   -
   - The Initial Developer of the Original Code is SHIMODA Hiroshi.
   - Portions created by the Initial Developer are Copyright (C) 2005
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s): SHIMODA Hiroshi <piro@p.club.ne.jp>
   -
   - ***** END LICENSE BLOCK ***** -->

