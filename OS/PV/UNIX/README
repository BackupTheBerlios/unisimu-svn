This is a UNIX C implemenation for bigplate.pl in the parent directory.

To build this application, you need to enter the following commands under a UNIX shell:

	chmod +x clean build run
	./build
	./clean

To get the application running, you can simply enter the command

	./run

and then you can check the four processes output later:

	cat f.out
	cat m.out
	cat s.out
	cat d.out

It's a good habit to clean up the shared resources when you has your job done. Simply
put the following commands to do the cleaning:

	./destroy

When you modify the keys for semaphores or shared memories, you have to update the
keys in clean.cfg accordingly, so it's not as convenient as using ``destroy''.
Because destroy.c also includes the global C/C++ header ``app.h''.

When you obtain the following error message from the ``init'' program:

	create_sema: : No space left on device
	create_sema: : No space left on device
	init.c: line 30: Failed to create semaphore 'can_put'.

then you should release the shared resources created by other users if you can.
Run the ``clean'' script to release all the shared memory segments and semaphores
owned by the current user:

	./clean

